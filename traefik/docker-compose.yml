services:
  traefik:
    image: traefik:3.5.0
    container_name: traefik
    hostname: traefik
    restart: unless-stopped
    depends_on:
      errorpages:
        condition: service_healthy
    environment:
      - CF_DNS_API_TOKEN=$CF_DNS_API_TOKEN
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/log/traefik:/logs
      - $DOCKER_DATA/traefik/acme.json:/acme.json
      - $DOCKER_DATA/traefik/credentials:/credentials:ro
    command:
      # API Dashboard
      - "--api.dashboard=true"
      # Docker discovery
      - "--providers.docker=true"
      - "--providers.docker.network=$DEFAULT_NETWORK"
      - "--providers.docker.exposedByDefault=false"
      # Entrypoints
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.internal.address=:8080"
      # HTTPS redirection
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      # Cloudflare Forwarder Headers
      - "--entrypoints.web.forwardedHeaders.trustedIPs=$HOME_SUBNET,$CF_IPS_V4,$CF_IPS_V6"
      - "--entrypoints.websecure.forwardedHeaders.trustedIPs=$HOME_SUBNET,$CF_IPS_V4,$CF_IPS_V6"
      # Big File Uploads (more info at: https://github.com/immich-app/immich/discussions/8872)
      - "--entrypoints.websecure.transport.respondingTimeouts.readTimeout=600s"
      # Let's Encrypt
      - "--certificatesResolvers.letsencrypt.acme.email=$LETS_ENCRYPT_EMAIL"
      - "--certificatesResolvers.letsencrypt.acme.storage=acme.json"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare"
      # Metrics settings
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.entryPoint=internal"
      # Logging settings
      - "--log=true"
      - "--log.level=WARN"
      - "--accessLog=true"
      - "--accessLog.filePath=logs/traefik.log"
      - "--accessLog.bufferingSize=100"
      # Ping
      - "--ping=true"
      - "--ping.entryPoint=internal"
      # OIDC Authentication Plugin
      - "--experimental.plugins.traefik-oidc-auth.modulename=github.com/sevensolutions/traefik-oidc-auth"
      - "--experimental.plugins.traefik-oidc-auth.version=v0.13.0"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.rule=Host(`$SUBDOMAIN.$DOMAIN_NAME`)"
      # Wildcard certificate
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
      - "traefik.http.routers.traefik.tls.domains[0].main=$DOMAIN_NAME"
      - "traefik.http.routers.traefik.tls.domains[0].sans=*.$DOMAIN_NAME"
      # OIDC Callback Router (handles redirect from the OIDC provider)
      - traefik.http.routers.traefik-callback.entrypoints=websecure
      - traefik.http.routers.traefik-callback.rule=Host(`$SUBDOMAIN.$DOMAIN_NAME`) && (PathPrefix(`/oidc/callback`) || PathPrefix(`/logout`))
      - traefik.http.routers.traefik-callback.middlewares=oidc-auth
      - traefik.http.routers.traefik-callback.service=noop@internal
      # --- Middlewares ---
      - "traefik.http.routers.traefik.middlewares=oidc-auth,error-pages,lan-only,security-headers"
      # OIDC Authentication
      - "traefik.http.middlewares.oidc-auth.plugin.traefik-oidc-auth.secret=${OIDC_SECRET}"
      - "traefik.http.middlewares.oidc-auth.plugin.traefik-oidc-auth.provider.url=https://${OIDC_SUBDOMAIN}.${DOMAIN_NAME}/"
      - "traefik.http.middlewares.oidc-auth.plugin.traefik-oidc-auth.provider.clientId=${OIDC_CLIENT_ID}"
      - "traefik.http.middlewares.oidc-auth.plugin.traefik-oidc-auth.provider.clientSecret=${OIDC_CLIENT_SECRET}"
      - "traefik.http.middlewares.oidc-auth.plugin.traefik-oidc-auth.scopes=${OIDC_SCOPES}"
      # IP Whitelist (LAN Only)
      - "traefik.http.middlewares.lan-only.ipallowlist.sourceRange=$HOME_SUBNET"
      # Security Headers: HTTP Strict Transport Security (HSTS)
      - "traefik.http.middlewares.security-headers.headers.stsSeconds=63072000"
      - "traefik.http.middlewares.security-headers.headers.stsIncludeSubdomains=true"
      - "traefik.http.middlewares.security-headers.headers.stsPreload=true"
      # Security Headers: X-Frame-Options
      - "traefik.http.middlewares.security-headers.headers.customFrameOptionsValue=SAMEORIGIN"
      # Security Headers: X-Content-Type-Options
      - "traefik.http.middlewares.security-headers.headers.contentTypeNosniff=true"
      # Security Headers: X-XSS-Protection
      - "traefik.http.middlewares.security-headers.headers.browserXssFilter=true"
      # Security Headers: Referrer-Policy
      - "traefik.http.middlewares.security-headers.headers.referrerPolicy=same-origin"
      # Security Headers: Permissions-Policy
      - "traefik.http.middlewares.security-headers.headers.permissionsPolicy=camera=(),microphone=(),usb=()"
    extra_hosts:
      - host.docker.internal:172.17.0.1 # https://doc.traefik.io/traefik/providers/docker/#host-networking

  errorpages:
    image: ghcr.io/tarampampam/error-pages:latest
    container_name: errorpages
    hostname: errorpages
    restart: unless-stopped
    environment:
      - TEMPLATE_NAME=$ERROR_PAGES_TEMPLATE
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.errorpages.loadbalancer.server.port=8080"
      - "traefik.http.routers.errorpages.entrypoints=websecure"
      # Fallback for any NON-registered services
      - "traefik.http.routers.errorpages.rule=HostRegexp(`.+`)"
      - "traefik.http.routers.errorpages.priority=10"
      - "traefik.http.routers.errorpages.middlewares=error-pages"
      # --- Error Pages Middleware ---
      - "traefik.http.middlewares.error-pages.errors.status=400-599"
      - "traefik.http.middlewares.error-pages.errors.service=errorpages"
      - "traefik.http.middlewares.error-pages.errors.query=/{status}.html"
networks:
  default:
    name: $DEFAULT_NETWORK
    external: true
